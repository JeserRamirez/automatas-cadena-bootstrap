Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> expresion SUMA expresion
Rule 2     expresion -> expresion RESTA expresion
Rule 3     expresion -> expresion MULTIPLICACION expresion
Rule 4     expresion -> NUMERO

Terminals, with rules where they appear

MULTIPLICACION       : 3
NUMERO               : 4
RESTA                : 2
SUMA                 : 1
error                : 

Nonterminals, with rules where they appear

expresion            : 1 1 2 2 3 3 0

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . expresion SUMA expresion
    (2) expresion -> . expresion RESTA expresion
    (3) expresion -> . expresion MULTIPLICACION expresion
    (4) expresion -> . NUMERO

    NUMERO          shift and go to state 2

    expresion                      shift and go to state 1

state 1

    (0) S' -> expresion .
    (1) expresion -> expresion . SUMA expresion
    (2) expresion -> expresion . RESTA expresion
    (3) expresion -> expresion . MULTIPLICACION expresion

    SUMA            shift and go to state 3
    RESTA           shift and go to state 4
    MULTIPLICACION  shift and go to state 5


state 2

    (4) expresion -> NUMERO .

    SUMA            reduce using rule 4 (expresion -> NUMERO .)
    RESTA           reduce using rule 4 (expresion -> NUMERO .)
    MULTIPLICACION  reduce using rule 4 (expresion -> NUMERO .)
    $end            reduce using rule 4 (expresion -> NUMERO .)


state 3

    (1) expresion -> expresion SUMA . expresion
    (1) expresion -> . expresion SUMA expresion
    (2) expresion -> . expresion RESTA expresion
    (3) expresion -> . expresion MULTIPLICACION expresion
    (4) expresion -> . NUMERO

    NUMERO          shift and go to state 2

    expresion                      shift and go to state 6

state 4

    (2) expresion -> expresion RESTA . expresion
    (1) expresion -> . expresion SUMA expresion
    (2) expresion -> . expresion RESTA expresion
    (3) expresion -> . expresion MULTIPLICACION expresion
    (4) expresion -> . NUMERO

    NUMERO          shift and go to state 2

    expresion                      shift and go to state 7

state 5

    (3) expresion -> expresion MULTIPLICACION . expresion
    (1) expresion -> . expresion SUMA expresion
    (2) expresion -> . expresion RESTA expresion
    (3) expresion -> . expresion MULTIPLICACION expresion
    (4) expresion -> . NUMERO

    NUMERO          shift and go to state 2

    expresion                      shift and go to state 8

state 6

    (1) expresion -> expresion SUMA expresion .
    (1) expresion -> expresion . SUMA expresion
    (2) expresion -> expresion . RESTA expresion
    (3) expresion -> expresion . MULTIPLICACION expresion

    SUMA            reduce using rule 1 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 1 (expresion -> expresion SUMA expresion .)
    $end            reduce using rule 1 (expresion -> expresion SUMA expresion .)
    MULTIPLICACION  shift and go to state 5

  ! MULTIPLICACION  [ reduce using rule 1 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 3 ]
  ! RESTA           [ shift and go to state 4 ]


state 7

    (2) expresion -> expresion RESTA expresion .
    (1) expresion -> expresion . SUMA expresion
    (2) expresion -> expresion . RESTA expresion
    (3) expresion -> expresion . MULTIPLICACION expresion

    SUMA            reduce using rule 2 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 2 (expresion -> expresion RESTA expresion .)
    $end            reduce using rule 2 (expresion -> expresion RESTA expresion .)
    MULTIPLICACION  shift and go to state 5

  ! MULTIPLICACION  [ reduce using rule 2 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 3 ]
  ! RESTA           [ shift and go to state 4 ]


state 8

    (3) expresion -> expresion MULTIPLICACION expresion .
    (1) expresion -> expresion . SUMA expresion
    (2) expresion -> expresion . RESTA expresion
    (3) expresion -> expresion . MULTIPLICACION expresion

    SUMA            reduce using rule 3 (expresion -> expresion MULTIPLICACION expresion .)
    RESTA           reduce using rule 3 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 3 (expresion -> expresion MULTIPLICACION expresion .)
    $end            reduce using rule 3 (expresion -> expresion MULTIPLICACION expresion .)

  ! SUMA            [ shift and go to state 3 ]
  ! RESTA           [ shift and go to state 4 ]
  ! MULTIPLICACION  [ shift and go to state 5 ]

